{"ast":null,"code":"var _jsxFileName = \"/Users/laurat/coding/react/Expense Tracker/src/components/Expenses/ExpensesChart.js\";\nimport React from 'react';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpensesChart(props) {\n  const chartDataPoints = [{\n    label: 'January',\n    value: 0\n  }, {\n    label: 'February',\n    value: 0\n  }, {\n    label: 'March',\n    value: 0\n  }, {\n    label: 'April',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'June',\n    value: 0\n  }, {\n    label: 'July',\n    value: 0\n  }, {\n    label: 'August',\n    value: 0\n  }, {\n    label: 'September',\n    value: 0\n  }, {\n    label: 'October',\n    value: 0\n  }, {\n    label: 'November',\n    value: 0\n  }, {\n    label: 'December',\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartDataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["/Users/laurat/coding/react/Expense Tracker/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from 'react'\nimport Chart from '../Chart/Chart'\n\nexport default function ExpensesChart(props) {\n  const chartDataPoints = [\n    { label: 'January', value: 0 },\n    { label: 'February', value: 0 },\n    { label: 'March', value: 0 },\n    { label: 'April', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'June', value: 0 },\n    { label: 'July', value: 0 },\n    { label: 'August', value: 0 },\n    { label: 'September', value: 0 },\n    { label: 'October', value: 0 },\n    { label: 'November', value: 0 },\n    { label: 'December', value: 0 },\n\n\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return (\n    <Chart chartDataPoints={chartDataPoints} />\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC3C,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,SAAT;IAAoBC,KAAK,EAAE;EAA3B,CADsB,EAEtB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAFsB,EAGtB;IAAED,KAAK,EAAE,OAAT;IAAkBC,KAAK,EAAE;EAAzB,CAHsB,EAItB;IAAED,KAAK,EAAE,OAAT;IAAkBC,KAAK,EAAE;EAAzB,CAJsB,EAKtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALsB,EAMtB;IAAED,KAAK,EAAE,MAAT;IAAiBC,KAAK,EAAE;EAAxB,CANsB,EAOtB;IAAED,KAAK,EAAE,MAAT;IAAiBC,KAAK,EAAE;EAAxB,CAPsB,EAQtB;IAAED,KAAK,EAAE,QAAT;IAAmBC,KAAK,EAAE;EAA1B,CARsB,EAStB;IAAED,KAAK,EAAE,WAAT;IAAsBC,KAAK,EAAE;EAA7B,CATsB,EAUtB;IAAED,KAAK,EAAE,SAAT;IAAoBC,KAAK,EAAE;EAA3B,CAVsB,EAWtB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAXsB,EAYtB;IAAED,KAAK,EAAE,UAAT;IAAqBC,KAAK,EAAE;EAA5B,CAZsB,CAAxB;;EAgBA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAsC;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;IACAP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAuCC,OAAO,CAACK,MAA/C;EACD;;EAED,oBACE,QAAC,KAAD;IAAO,eAAe,EAAER;EAAxB;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;KAzBuBF,a"},"metadata":{},"sourceType":"module"}